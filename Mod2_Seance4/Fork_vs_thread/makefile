# --------------------------------------------------------------------- #
#          	Makefile du projet Fork vs Thread                       #
#                                                                       #
# C. VERCAUTER                                           08/03/2019     #
#                                                                       #
# --------------------------------------------------------------------- #


# --------------------------------------------------------------------- #

# --------------------------------------------------------------------- #
# Spécification du compilateur utilisé                                  #
# --------------------------------------------------------------------- #
CC = gcc


# --------------------------------------------------------------------- #
# Définition des options de compilation                                 #
#       -Wall           : affiche tous les messages d'avertissement     #
#       -Werror         : traiter les avertissements comme des erreurs	#
#       -std=c99        : respect  du standard ISO C99                  #
#       -pedantic       : rien que le standard ISO C99                  #
# --------------------------------------------------------------------- #
#CFLAGS  = -Wall 
CFLAGS += -std=c99 


# --------------------------------------------------------------------- #
# Définition des options de l'éditeur de liens                          #
# --------------------------------------------------------------------- #
LDFLAGS = 

# --------------------------------------------------------------------- #
#      Définition des cibles (exécutables)  à générer		        #
# --------------------------------------------------------------------- #
TEST        = resultats.txt
PROGRAM1    = testFork	    # test de fork                              #
PROGRAM2    = testThread    # test de thread				#

# --------------------------------------------------------------------- #
#      Définition des listes de fichiers sources                        #
# --------------------------------------------------------------------- #
SRC1 = testFork.c
SRC2 = testThread.c

# --------------------------------------------------------------------- #
#      Construction des listes de fichiers objet                        #
# --------------------------------------------------------------------- #
OBJ1 =  $(SRC1:.c=.o)
OBJ2 =  $(SRC2:.c=.o)

# --------------------------------------------------------------------- #
#      Toutes les cibles                                                #
# --------------------------------------------------------------------- #
all: $(TEST) $(PROGRAM1) $(PROGRAM2) 

# --------------------------------------------------------------------- #
#      Règles de dépendances                                            #
# --------------------------------------------------------------------- #

$(TEST): $(PROGRAM1) $(PROGRAM2)
	@cat /proc/cpuinfo | grep "model name" | uniq | cut -d: -f2 | sed 's/^ *//' > $@
	@echo  "\n\t            +-----------+--------+--------+" >> $@
	@echo    "\t   Durée    |   réelle  |  user  |  sys.  |" >> $@
	@echo    "\t+-----------+-----------+--------+--------+" >> $@
	@echo -n "\t|  fork     |" >> $@
	@\time -ao $@ -f "    %e   |  %U  |  %S  |" ./$(PROGRAM1)
	@echo   "\t+-----------+-----------+--------+--------+" >> $@
	@echo -n "\t|  thread   |" >> $@
	@\time -ao $@ -f "    %e   |  %U  |  %S  |" ./$(PROGRAM2)
	@echo   "\t+-----------+-----------+--------+--------+\n" >> $@
	@cat $@

$(PROGRAM1): $(OBJ1) 
	$(CC) $^ -o $@ $(LDFLAGS) 

$(PROGRAM2): $(OBJ2)
	$(CC) $^ -o $@ -lpthread

# --------------------------------------------------------------------- #
# Dépendances produites par l'exécution de make depend                  #
# --------------------------------------------------------------------- #
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

.PHONY: clean realclean touchAll pretty depend

# --------------------------------------------------------------------- #
#       Cible secondaire : nettoyage des fichiers objets                #
# --------------------------------------------------------------------- #
clean:
	@rm -f $(OBJ1) $(OBJ2) *.orig *~ 
	@echo "Effacement des fichiers intermédiaires ...  effectué"

# --------------------------------------------------------------------- #
#      3 ème cible : nettoyage de tous les fichiers objets, des         #
#               fichiers exécutables et de librairies  générés          #
# --------------------------------------------------------------------- #
realclean: clean
	@rm -f $(TEST) $(PROGRAM1) $(PROGRAM2) 
	@echo "Nettoyage complet ... effectué "

# --------------------------------------------------------------------- #
#      4 ème cible :                                                    #
# --------------------------------------------------------------------- #
touchAll:
	@touch *.c
# --------------------------------------------------------------------- #
#      5 ème cible :                                                    #
# --------------------------------------------------------------------- #
depend:
	$(CC)  -MM  $(SRC1) $(SRC2)
# --------------------------------------------------------------------- #
#      6 ème cible :                                                    #
# --------------------------------------------------------------------- #
pretty:
	astyle *.c -A4
# --------------------------------------------------------------------- #


